@model BudgetPlanner.Models.DashboardViewModel

@{
    ViewBag.Title = "Dashboard Index";
}

@*<div class="container">*@
<br />

    <!-- FIRST ROW OF BLOCKS -->
    <div class="container">
        <div class="row">
            <div class="col-md-12 text-center" id="headerwrap">
                <h3>@ViewBag.hhName Household</h3>
            </div>
        </div>
    </div>
    <div class="row">
        <br />
        <!-- Household user block -->
        <div class="col-sm-4 col-lg-4">
            <div class="dash-unit">
                <div class="col-sm-12">
                    <dtitle>
                        <a href="@Url.Action("Display","Households")" style="color:white ; font-size:16px">Household Members</a>
                    </dtitle>
                </div>
                <div class="col-sm-12">
                    <hr>
                    <dbody>
                        <table>
                            <thead>
                            </thead>
                            <tbody>
                                @{
                                    foreach (var item in Model.HouseholdUsers)
                                    {
                                        <tr>
                                            <td class="col-md-6">
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td class="col-md-6">
                                                @Html.DisplayFor(modelItem => item.Email)
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </dbody>
                </div>
                
            </div>
        </div>

        <!-- ACCOUNTS BLOCK -->
        <div class="col-sm-3 col-lg-3">
            <div class="dash-unit">
                <div class="col-sm-12">
                    <dtitle>
                        <a href="@Url.Action("Index","BudgetAccounts")" style="color:white ; font-size:16px">Accounts</a>
                    </dtitle>
                </div>
                <div class="col-sm-12">
                    <hr>
                    <dbody>
                        <table>
                            <thead>
                            </thead>
                            <tbody>
                                @{
                                    foreach (var item in Model.Accounts)
                                    {
                                        <tr>
                                            <td class="col-md-9">
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td class="col-md-3">
                                                @Html.DisplayFor(modelItem => item.Balance)
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </dbody>
                </div>
            </div>
        </div>

        <!-- Transaction BLOCK -->
        <div class="col-sm-5 col-lg-5">
            <div class="dash-unit">
                <div class="col-sm-12">
                    <dtitle>
                        <a href="@Url.Action("Index","BudgetAccounts")" style="color:white ; font-size:16px">Transactions</a>
                    </dtitle>
                </div>
                <div class="col-sm-12">
                    <hr>
                    <table>
                        <thead>
                            <tr>
                                <td class="col-md-3">
                                    @Html.DisplayText("Account")
                                </td>
                                <td class="col-md-3">
                                    @Html.DisplayText("Date")
                                </td>
                                <td class="col-md-4">
                                    @Html.DisplayText("Category")
                                </td>
                                <td class="col-md-2">
                                    @Html.DisplayText("Amount")
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var item in Model.Transactions.OrderByDescending(t => t.Date).Take(5))
                                {
                                    <tr>
                                        <td class="col-md-3">
                                            @Html.DisplayFor(modelItem => item.Account.Name)
                                        </td>
                                        <td class="col-md-3">
                                            @Html.DisplayFor(modelItem => item.Date)
                                        </td>
                                        <td class="col-md-4">
                                            @Html.DisplayFor(modelItem => item.Category.Name)
                                        </td>
                                        <td class="col-md-2">
                                            @Html.DisplayFor(modelItem => item.Amount)
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div><!-- /row -->

<!-- Chart BLOCK -->
    <div class="row">        
        <div class="col-sm-12 col-lg-12">
            <div class="dash-unit" style="height:250px">
                <div class="col-sm-12 text-center">
                    <div class="col-sm-4"></div>
                    <div class="col-sm-1"><h3 style="color:rgba(220,220,220,0.75)">Budget</h3></div>
                    <div class="col-sm-1"><h3> vs. </h3></div>
                    <div class="col-sm-1"><h3 style="color:rgba(151,187,205,0.75)">Actual</h3>
                </div>
                <div class="col-sm-12 col-lg-12">
                    <hr>
                    <canvas id="barChart" width="1100" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

<script>
    $(document).ready(function()
    {
         var data =
        {
            labels: [],
            datasets: [
                {
                    label: "Budget",
                    fillColor: "rgba(220,220,220,0.5)",
                    strokeColor: "rgba(220,220,220,0.8)",
                    highlightFill: "rgba(220,220,220,0.75)",
                    highlightStroke: "rgba(220,220,220,1)",
                    data: []
                },
                {
                    label: "Actual",
                    fillColor: "rgba(151,187,205,0.5)",
                    strokeColor: "rgba(151,187,205,0.8)",
                    highlightFill: "rgba(151,187,205,0.75)",
                    highlightStroke: "rgba(151,187,205,1)",
                    data: []
                }
            ]
        };

         var options = {
             scaleBeginAtZero: true,  //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
             scaleShowGridLines: true,   //Boolean - Whether grid lines are shown across the chart
             scaleGridLineColor: "rgba(0,0,0,.05)",  //String - Colour of the grid lines
             scaleGridLineWidth: 1,  //Number - Width of the grid lines
             scaleShowHorizontalLines: true, //Boolean - Whether to show horizontal lines (except X axis)
             scaleShowVerticalLines: true,   //Boolean - Whether to show vertical lines (except Y axis)
             barShowStroke: true,    //Boolean - If there is a stroke on each bar
             barStrokeWidth: 2,  //Number - Pixel width of the bar stroke
             barValueSpacing: 5, //Number - Spacing between each of the X value sets
             barDatasetSpacing: 1,   //Number - Spacing between data sets within X values
             legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

         }

        $.post("@Url.Action("GetChartData", "Home")").then(function (response)
        {
            for (i = 0; i < response.length; i++) 
            {
                data.labels.push(response[i].Name);
                data.datasets[0].data.push(response[i].BudgetAmount);
                if(response[i].ActualAmount < 0)
                    data.datasets[1].data.push(response[i].ActualAmount);
                else
                    data.datasets[1].data.push(response[i].ActualAmount);
            }

            Chart.defaults.global.scaleFontColor="white";
            var context = $("#barChart").get(0).getContext("2d");             
            window.barChart = new Chart(context).Bar(data, responsive = true)
            window.barChart.update;

            //document.getElementById('barLegend').innerHTML = window.barChart.generateLegend();
        })


    })
 
</script>
