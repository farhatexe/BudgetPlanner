@model BudgetPlanner.Models.DashboardViewModel

@{
    ViewBag.Title = "Dashboard Index";
}

@*<div class="container">*@
<br />

    <!-- FIRST ROW OF BLOCKS -->
    <div class="container">
        <div class="row">
            <div class="col-md-12 text-center" id="headerwrap">
                <h3>@ViewBag.hhName Household</h3>
            </div>
        </div>
    </div>
    <div class="row">
        <br />
        <!-- Household user block -->
        <div class="col-sm-4 col-lg-4">
            <div class="dash-unit">
                <div class="col-sm-12">
                    <dtitle>
                        <a href="@Url.Action("Display","Households")" style="color:white ; font-size:16px">Household Members</a>
                    </dtitle>
                </div>
                <div class="col-sm-12">
                    <hr>
                    <dbody>
                        <table>
                            <thead>
                            </thead>
                            <tbody>
                                @{
                                    foreach (var item in Model.HouseholdUsers)
                                    {
                                        <tr>
                                            <td class="col-md-6">
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td class="col-md-6">
                                                @Html.DisplayFor(modelItem => item.Email)
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </dbody>
                </div>
                
            </div>
        </div>

        <!-- ACCOUNTS BLOCK -->
        <div class="col-sm-3 col-lg-3">
            <div class="dash-unit">
                <div class="col-sm-12">
                    <dtitle>
                        <a href="@Url.Action("Index","BudgetAccounts")" style="color:white ; font-size:16px">Accounts</a>
                    </dtitle>
                </div>
                <div class="col-sm-12">
                    <hr>
                    <dbody>
                        <table>
                            <thead>
                            </thead>
                            <tbody>
                                @{
                                    foreach (var item in Model.Accounts)
                                    {
                                        <tr>
                                            <td class="col-md-9">
                                                @Html.DisplayFor(modelItem => item.Name)
                                            </td>
                                            <td class="col-md-3">
                                                @Html.DisplayFor(modelItem => item.Balance)
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </dbody>
                </div>
            </div>
        </div>

        <!-- Transaction BLOCK -->
        <div class="col-sm-5 col-lg-5">
            <div class="dash-unit">
                <div class="col-sm-12">
                    <dtitle>
                        <a href="@Url.Action("Index","BudgetAccounts")" style="color:white ; font-size:16px">Transactions</a>
                    </dtitle>
                </div>
                <div class="col-sm-12">
                    <hr>
                    <table>
                        <thead>
                            <tr>
                                <td class="col-md-3">
                                    @Html.DisplayText("Account")
                                </td>
                                <td class="col-md-3">
                                    @Html.DisplayText("Date")
                                </td>
                                <td class="col-md-4">
                                    @Html.DisplayText("Category")
                                </td>
                                <td class="col-md-2">
                                    @Html.DisplayText("Amount")
                                </td>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var item in Model.Transactions.OrderByDescending(t => t.Date).Take(5))
                                {
                                    <tr>
                                        <td class="col-md-3">
                                            @Html.DisplayFor(modelItem => item.Account.Name)
                                        </td>
                                        <td class="col-md-3">
                                            @Html.DisplayFor(modelItem => item.Date)
                                        </td>
                                        <td class="col-md-4">
                                            @Html.DisplayFor(modelItem => item.Category.Name)
                                        </td>
                                        <td class="col-md-2">
                                            @Html.DisplayFor(modelItem => item.Amount)
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div><!-- /row -->

<!-- Chart BLOCK -->
    <div class="row">        
        <div class="col-sm-12 col-lg-12">
            <div class="dash-unit" style="height:250px">
                <div class="col-sm-12 text-center">
                    <h3>Budget vs. Actual</h3>
                </div>
                <div class="col-sm-12 col-lg-12">
                    <hr>
                    <canvas id="barChart" width="1100" height="200"></canvas>
                </div>
                @*<div class="col-sm-6">
                    <hr>
                    <canvas id="actualChart" width="525" height="200"></canvas>                    
                </div>*@
            </div>
        </div>
    </div>

<script>
    var context = $("#barChart").get(0).getContext("2d");
    var data =
    {
        labels: ["January", "February", "March", "April", "May", "June", "July"],
        datasets: [
            {
                label: "My First dataset",
                fillColor: "rgba(220,220,220,0.5)",
                strokeColor: "rgba(220,220,220,0.8)",
                highlightFill: "rgba(220,220,220,0.75)",
                highlightStroke: "rgba(220,220,220,1)",
                data: [65, 59, 80, 81, 56, 55, 40]
            },
            {
                label: "My Second dataset",
                fillColor: "rgba(151,187,205,0.5)",
                strokeColor: "rgba(151,187,205,0.8)",
                highlightFill: "rgba(151,187,205,0.75)",
                highlightStroke: "rgba(151,187,205,1)",
                data: [28, 48, 40, 19, 86, 27, 90]
            }
        ]
    };

    var options = {
        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero: true,

        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,

        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",

        //Number - Width of the grid lines
        scaleGridLineWidth: 1,

        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,

        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,

        //Boolean - If there is a stroke on each bar
        barShowStroke: true,

        //Number - Pixel width of the bar stroke
        barStrokeWidth: 2,

        //Number - Spacing between each of the X value sets
        barValueSpacing: 5,

        //Number - Spacing between data sets within X values
        barDatasetSpacing: 1,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    }

    Chart.defaults.global.responsive = true;
    var BarGraph = new Chart(context).Bar(data, options)

</script>
