@model BudgetPlanner.Models.Transaction

@{
    ViewBag.Title = "Edit Transaction";
}

@*<div class="container">*@
    <br />
    <br />
<div class="row">
    <div class="col-md-12">
        @*<div class="col-md-10">*@
            <div class="panel">
                <div class="panel-heading">
                    <div class="col-md-12">
                        <div class="col-sm-2">
                            <div class="col-sm-1">
                                <a href="@Url.Action("Index", "Transactions", new { acctId = ViewBag.AccountId })" class="glyphicon glyphicon-hand-left" style="font-size: 16px"> </a>
                            </div>
                            <div class="col-sm-1">
                                <a href="@Url.RouteUrl("TransactionDelete", new { id = Model.Id, acctId = ViewBag.AccountId })" class="glyphicon glyphicon-trash"> </a>
                            </div>
                        </div>
                        
                        <div class="col-md-5">
                            <h4>
                                @ViewBag.Name Transaction
                            </h4>
                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <div class="col-md-12">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.AccountId)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.Reconciled, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2", autofocus = "autofocus" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-2">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        @*</div>*@
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
